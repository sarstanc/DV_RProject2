{
    "contents" : "require(tidyr)\nrequire(dplyr)\n\ntbl_df(diamonds)\nView(diamonds)\nselect(diamonds, cut, clarity)\ndiamonds %>% select(cut, clarity)\nx <- diamonds %>% select(cut, clarity) %>% tbl_df\ndiamonds %>% select(cut, clarity) %>% filter(cut == \"Good\") %>% tbl_df\ndiamonds %>% select(cut, clarity) %>% filter(cut %in% c(\"Good\", \"Fair\")) %>% tbl_df\ndiamonds %>% select(cut, clarity) %>% filter(cut %in% c(\"Good\", \"Fair\"), clarity == \"VS1\") %>% tbl_df\ndiamonds %>% select(cut, clarity) %>% filter(cut %in% c(\"Good\", \"Fair\"), clarity == \"VS1\" | is.na(cut)) %>% tbl_df\n\ndiamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c(\"Good\", \"Fair\"), clarity == \"VS1\" | is.na(cut)) %>% tbl_df\ndiamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c(\"Good\", \"Fair\"), clarity == \"VS1\" | is.na(cut)) %>% mutate(sum = x+y+z) %>% tbl_df\nndf <- diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c(\"Good\", \"Fair\"), clarity == \"VS1\" | is.na(cut)) %>% mutate(sum = x+y+z) %>% tbl_df\nndf\n\n# Useful mutate functions:\n    # pmin(), pmax() Parallel, Element-wise min and max\n    # cummin(), cummax() Cumulative min and max\n    # cumsum(), cumprod() Cumulative sum and product\n  # Windowing functions\n    # between() Are values between a and b?\n    # cume_dist() Cumulative distribution of values\n    # cumall(), cumany() Cumulative all and any\n    # cummean() Cumulative mean\n    # lead(), lag() Copy with values one position\n    # ntile() Bin vector into n buckets\n    # dense_rank(), min_rank(),\n    # percent_rank(), row_number() Various ranking methods\n\npmin(c(1:5), (5:1))\npmax(c(1:5), (5:1))\nc(1,1,2,0,4,3,5) %>% cummin()\nc(1,1,2,5,4,3,5) %>% cummax()\nc(1,1,2,3,4,3,5) %>% cumsum()\nc(1,1,2,3,4,3,5) %>% cumprod()\n\nc(1,1,2,3,4,3,5) %>% between(2,4)\nc(1,1,2,5,4,3,5) %>% cume_dist()\nc(1:5) %>% cume_dist()\nc(1,1:5) %>% cume_dist()\n# c(TRUE, TRUE, FALSE, FALSE, TRUE) %>% cumall()\n# c(FALSE, TRUE, FALSE, FALSE, TRUE) %>% cumany()\nc(1:5) %>% cummean()\nc(1:5) %>% lead() - c(1:5)\n c(1:5) %>% lag() - c(1:5)\nc(1:10)\nc(1:10) %>% ntile(4) # bucket edges are rounded\n\n# Now let's try them in the mutate function\ndiamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20) %>% arrange(desc(price_percent)) %>% tbl_df\nbottom20_diamonds <- diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20) %>% arrange(desc(price_percent)) %>% tbl_df\ndiamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent >= .80) %>% arrange(desc(price_percent)) %>% tbl_df\ntop20_diamonds <- diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent >= .80) %>% arrange(desc(price_percent)) %>% tbl_df\n\ndiamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20 | price_percent >= .80) %>% ggplot(aes(x = price, y = carat)) + geom_point(aes(color=cut))\n\ndiamonds %>% mutate(minxy = pmin(x,y)) %>% tbl_df\ndiamonds %>% mutate(cummin_x = cummin(x)) %>% tbl_df\ndiamonds %>% mutate(cumsum_x = cumsum(x)) %>% tbl_df\ndiamonds %>% mutate(between_x = between(x,4,4.1)) %>% tbl_df\ndiamonds %>% mutate(between_x = lead(z)-z) %>% tbl_df\ndiamonds %>% mutate(between_x = lag(z)-z) %>% tbl_df\ndiamonds %>% mutate(between_x = ntile(z,100)) %>% tbl_df\n\n# Useful Summary functions:\n  # min(), max() Minimum and maximum values\n  # mean() Mean value\n  # median() Median value\n  # sum() Sum of values\n  # var, sd() Variance and standard deviation of a vector\n  # first() First value in a vector\n  # last() Last value in a vector\n  # nth() Nth value in a vector\n  # n() The number of values in a vector\n  # n_distinct() The number of distinct values in a vector\n\ndiamonds %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n())\n\ndiamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n())\n\n# Order By\n# arrange()\ndata.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% arrange(desc(x)) %>% tbl_df\ndata.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% arrange(desc(x),y) %>% tbl_df\n\ndiamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% arrange(n)\ndiamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% arrange(desc(n), cut, color)\n\ndiamonds %>% group_by(cut,color, clarity) %>% summarise(mean_carat = mean(carat)) %>% ggplot(aes(x=cut, y=mean_carat, color=color)) + geom_point() + facet_wrap(~clarity)\n\n",
    "created" : 1423780354593.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "392799096",
    "id" : "CC2E826E",
    "lastKnownWriteTime" : 1423779570,
    "path" : "~/Documents/Development/DataVisualization/DrCannata/RWorkshop/07 Data Wrangling/Data Wrangling.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}